{ "status": 0,
  "result":[
  	{
  	 	"_id":"1",
  	 	"title":"组织和管理css文件",
  	 	"avatar":"http://zhongwenhao.cn/uploader/images/7269379789941013.png",
  	 	"date":"2017-1-28",
  	 	"key":"css",
  	 	"des":"CSS文件比较多的时候，组织和管理是必须的，一切都是手段，只为了实现方便开发和后期维护的目的",
  	 	"content":"<p>css文件的组织和管理，站在前端开发人员的角度来看，前期开发的时候，样式能复用，稍作修改即可满足特定场景的需求，除过某些很特殊的页面组件；后期维护能迅速定位，同时修改后不会影响到同站下其他网页的样式。</p><p>这里提出的css文件的组织和管理，是围绕着模块化展开的，前提是你使用了css预处理工具语言，例如sass、less，前端工程化即你使用了构建工具（例如gulp）或者模块化预处理工具（例如webpack）。</p><p>能复用对应的是通用性。稍作修改，你可以利用css的优先级来重定义对之前的样式覆盖。</p><p>迅速定位，修改后不会影响其他，这就要求针对性和个性化。</p><p>css在页面中的定位是如何更好的显示页面文档，所以样式永远是基于html的。所以下面这个分类很好理解：</p><p>基础性样式：</p><p><ul><li>主体样式<br></li><li>reset样式（有的叫normal样式）</li></ul><div>基础标签样式：</div><ul><li>链接样式<br></li><li>标题样式</li><li>文字样式</li><li>颜色样式<br></li><li>表单样式</li><li>等等其他页面通用性较高标签的样式</li></ul></p><p>页面通用组件样式：</p><p><ul><li>布局<br></li><li>头部、页脚、菜单和导航</li><li>弹窗组件</li><li>按钮组件</li><li>其他通用组件元素样式，例如表格，分页等等<br></li></ul></p><p>页面个性化组件：</p><p><ul><li>各个页面特定组件的个性化需求</li></ul><div><br></div><div>综上，整体结构就是base + common + page。</div><div>组织和管理方式就是：base.less + common.less + page.less &nbsp; -&gt; &nbsp;yourPage.css</div><div><br></div></p><p><br></p><p><br></p>","__v":0
  	}
  ]
}